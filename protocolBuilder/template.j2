{% set parent = types[cls.parent] if cls.parent else None -%}
{% if parent != None -%}
from {{parent.package}} import {{parent.name}}
{%- else -%}
from com.ankamagames.jerakine.network.NetworkMessage import NetworkMessage{% endif %}
{%- if nonPrimitives %}
from typing import TYPE_CHECKING
if TYPE_CHECKING:
    {% for type in nonPrimitives -%}
    from {{types[type].package}} import {{type}}
    {% endfor %}
{%- endif %}


class {{cls.name}}({% if parent != None %}{{parent.name}}{% else %}NetworkMessage{% endif %}):
    {% for arg in init_args -%}
    {{arg.name}}:{{arg.type}}
    {% endfor %}
    {%- for field in cls.boolfields -%}
    {{field.name}}:{{field.typename}}
    {% endfor %}

    def init(self{%for arg in init_args %}, {{arg.name}}_:{{arg.type}}{% endfor %}{%for arg in super_args%}, {{arg.name}}_:{{arg.type}}{% endfor %}):
        {% for arg in init_args -%}
        self.{{arg.name}} = {{arg.name}}_
        {% endfor %}
        super().__init__({%for arg in super_args%}{{arg.name}}_{% if not loop.last %}, {% endif %}{% endfor %})
    
    